<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="review">

    <!--조원재 23.04.05 리뷰 생성-->
    <insert id="insert" parameterType="com.goott.pj3.board.review.dto.ReviewDTO" useGeneratedKeys="true" keyProperty="review_idx">
        insert into plan_review(user_id, plan_idx, review_content, review_rating)
        values (#{user_id}, #{plan_idx}, #{review_content}, #{review_rating})
    </insert>
    <!--조원재 23.04.21 리뷰 이미지 파일 생성-->
    <insert id="file" parameterType="com.goott.pj3.board.review.dto.ReviewDTO">
            insert into review_img(review_idx, r_img) values
            <foreach collection="r_img" item="item" separator=",">
                 (#{review_idx}, #{item})
            </foreach>
    </insert>

    <!--조원재 23.04.05 디테일 페이지-->
    <select id="detail" resultMap="reviewResultMap">
        select r.review_idx, r.user_id, r.plan_idx, r.review_content, r.review_rating, r.create_date,
               group_concat(i.r_img separator ',') as r_imgs,
               group_concat(i.r_img_idx separator ',') as r_img_idxs
         from plan_review r left join review_img i
           on r.review_idx = i.review_idx
        where r.review_idx = #{review_idx}
        group by r.review_idx
    </select>

    <resultMap id="reviewResultMap" type="com.goott.pj3.board.review.dto.ReviewDTO">
        <id property="review_idx" column="review_idx"/>
        <result property="user_id" column="user_id"/>
        <result property="plan_idx" column="plan_idx"/>
        <result property="review_content" column="review_content"/>
        <result property="review_rating" column="review_rating"/>
        <result property="create_date" column="create_date"/>
        <collection property="r_img" column="r_imgs" javaType="java.util.List" ofType="java.lang.String" >
            <result column="r_imgs"/>
        </collection>
        <collection property="r_img_idx" column="r_img_idxs" javaType="java.util.List" ofType="java.lang.String" >
            <result column="r_img_idxs"/>
        </collection>
    </resultMap>

    <!--조원재 23.04.05 리뷰 수정-->
    <update id="update" parameterType="com.goott.pj3.board.review.dto.ReviewDTO" useGeneratedKeys="true" keyProperty="review_idx">
        update plan_review
           set review_content=#{review_content}
         where review_idx = #{review_idx}
    </update>

    <update id="updatefile" parameterType="com.goott.pj3.board.review.dto.ReviewDTO">
        <foreach collection="r_img" item="item" separator=",">
        update review_img
           SET r_img=#{item}
         where review_idx=#{review_idx}
        </foreach>
    </update>

    <!--조원재 23.04.05 리뷰 삭제-->
    <update id="delete" parameterType="hashMap">
        update plan_review
          set r_del_yn = 'n'
        where review_idx=#{review_idx}
    </update>
    
    <!--조원재 23.04.05 리뷰 목록, 검색-->
    <select id="list" resultType="com.goott.pj3.board.review.dto.ReviewDTO">
        select review_idx, user_id, plan_idx, review_content,
               review_rating, create_date, update_date
          from plan_review
         where 
		   	<if test="option == 'user_id'"> user_id like CONCAT('%',#{keyword},'%')</if>
	        <if test="option == 'content'"> review_content like CONCAT('%',#{keyword},'%')</if>
	        <if test="option == null or option == ''">1=1</if>
           and r_del_yn = 'y'
         order by review_idx desc
         limit #{pageStart}, #{perPageNum}
    </select>

    <select id="totalCount" resultType="int">
        select count(review_idx)
          from plan_review
         where 
		   	<if test="option == 'user_id'"> user_id like CONCAT('%',#{keyword},'%')</if>
	        <if test="option == 'content'"> review_content like CONCAT('%',#{keyword},'%')</if>
	        <if test="option == null or option == ''">1=1</if>
          and r_del_yn = 'y'
    </select>

<!--	<insert id="replywrite">-->
<!--		insert into reply(review_idx, r_writer, r_content)-->
<!--		values (#{review_idx}, #{r_writer}, #{r_content})-->
<!--	</insert>-->
<!--	-->
<!--	<select id="getList" resultType="com.goott.pj3.common.util.ReplyDTO">-->
<!--		select reply_idx, r_writer, r_content-->
<!--		  from reply-->
<!--		 where review_idx = #{review_idx}-->
<!--		   and r_del_yn = 'n'-->
<!--	</select>-->
<!--	-->
<!--	<update id="replyupdate">-->
<!--		update reply-->
<!--		   set r_content = #{r_content}-->
<!--		 where reply_idx = #{reply_idx}-->
<!--	</update>-->
<!--	-->
<!--	<update id="replydelete">-->
<!--		update reply-->
<!--		   set r_del_yn = 'y'-->
<!--		 where reply_idx = #{reply_idx}-->
<!--	</update>-->
</mapper>

