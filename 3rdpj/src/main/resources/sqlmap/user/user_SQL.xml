<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="user">
	<!-- 장민실 23.04.04 -->
	<!-- 회원가입 -->
	<insert id="sign_up">
		<![CDATA[
		insert into user (user_id, pw, birth, email, hp)
		values (#{user_id}, #{pw}, #{birth}, #{email}, #{hp})
		]]>
	</insert>
   
	<!-- 아이디 중복체크 -->
	<select id="id_chk" parameterType="String" resultType="int">
		select count(user_id)
		  from user
		 where user_id = #{user_id}
	</select>
   
	<!-- 로그인 -->
	<select id="sign_in" resultType="com.goott.pj3.user.dto.UserDTO">
		<![CDATA[
		select user_id, auth, u_del_yn
		  from user
		 where user_id = #{user_id}
		 and pw = #{pw}
		]]>
	</select>
	  
	<!-- DB의 암호화 비밀번호 가져오기 -->
	<select id="get_hashed_pw" parameterType="com.goott.pj3.user.dto.UserDTO" resultType="String">
		<![CDATA[
		select pw
		  from user
		 where user_id = #{user_id}
		]]>
	</select>
	
	<!-- 아이디 찾기 -->
	<select id="find_id" parameterType="com.goott.pj3.user.dto.UserDTO" resultType="String">
		<![CDATA[
		select user_id
		  from user
		 where email = #{email}
		   and hp = #{hp}
		]]>
	</select>
	
	<!-- 비밀번호 찾기 -->
   	<select id="find_get_pw" parameterType="com.goott.pj3.user.dto.UserDTO" resultType="String">
   		select pw
   		  from user
   		 where user_id = #{user_id}
   		   and hp = #{hp}
   	</select>
   	
   	<!-- 비밀번호 변경 -->
   	<update id="find_set_pw" parameterType="com.goott.pj3.user.dto.UserDTO">
   		update user
   		   set pw = #{pw}
   		 where user_id = #{user_id}
   		   and hp = #{hp}
   	</update>
   	
   	<!-- 일반사용자 마이페이지 -->
   	<select id="get_user_info" resultType="com.goott.pj3.user.dto.UserDTO">
   		<![CDATA[
   		select user_id, birth, email, hp, profile_img, u_point, create_date, update_date
   		  from user
   		 where user_id = #{user_id}
   		]]>
   	</select>
   	
   	<!-- 플래너 마이페이지 -->
   	<select id="get_planner_info" resultType="com.goott.pj3.user.dto.UserDTO">
   		<![CDATA[
   		select user_id, birth, email, hp, hp_emp, intro, profile_img, u_point, emp_num, success_count,
   			   create_date, update_date, round(avg(planner_rating/rating_cnt), 1) as planner_score
   		  from user
   		 where user_id = #{user_id} 
   		]]>
   	</select>
</mapper>
